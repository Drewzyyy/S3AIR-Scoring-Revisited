

// Data select and score stuff for my rankings mod which I really need a real name for

global bool scr.scoreMenuIsActive = 0

//# address-hook(0x01ad20) end(0x01af68)
function void DrawObject()
{
    if scr.scoreMenuIsActive == 1
        return
    else
        base.DrawObject()
}

//# address-hook(0x00d7c0) end(0x00d7e6)
function void fn00d7c0() // fn00d96a and fn00d7c0 were here
{
    if (Input.buttonPressed(BUTTON_Y))
    {
        playSound(0xaf)
        //global.game_mode = 0xEA
        scr.openScoreMenu() // EA was chosen because Electronic Arts is inherently funny
    }

    else
    {
        base.fn00d7c0()
    }
}

// This P rank is dedicated to Imabigsonicfan1234

function void scr.openScoreMenu() // This is the rudimentaryest menu ever. It also contains the worst case of write-only spaghetti code that I have ever produced.
{
    scr.scoreMenuIsActive = 1

	Renderer.drawSprite("scoremenu-bg", 0, 0, 0, 0, 0xf000)
	
    string currentchar = 0

    bool esmode = 0

    while (scr.scoreMenuIsActive == 1)
    {

        // Draw backgrounds

        //Renderer.drawSprite(getRankSprite(), 175, 35, 100, 0x40, 0xe000)

        // Write all of the text
        Renderer.drawText("oxyfont_regular", 10, 10, stringformat("%s's Scorecard", scr.getCharName(currentchar, esmode)), 0x0f0f0fff, 1, 0, 0xe000, 0)

        // I need a more effective way of doing this. Right now, we have the functions from hell. I did try a for loop, but it was glitchy.
        /*
            Because this code is practically unreadable with all the functions within functions that it has, I may as well explain how it works.
            This uses the stringformat function to generate a string containing the rank letter and high score for every act. I originally tried to use the internal global.zone_act
            values for this, but they didn't exactly work 
        */
		

		
		DrawText(0, currentchar)
		DrawText(1, currentchar)
		DrawText(2, currentchar)
		DrawText(3, currentchar)
		DrawText(4, currentchar)
		DrawText(5, currentchar)
		DrawText(6, currentchar)
		DrawText(7, currentchar)
		DrawText(8, currentchar)
		DrawText(9, currentchar)
		DrawText(10, currentchar)
		DrawText(11, currentchar)
		
		
        if (Input.buttonPressed(BUTTON_LEFT))
            if currentchar == 0
                if true //Placeholder functionality, replace with Mods.isModActive("Extra Character Slots") eventually
                {
                    esmode = 1
                    currentchar = 0
                }
                else
                    currentchar = 4
            else
                currentchar -= 1
            
        
        if (Input.buttonPressed(BUTTON_RIGHT))
            if currentchar == 4
                currentchar = 0
            else
                currentchar += 1
            //Audio.playAudio(SFX_CLICK)
        

        if (Input.buttonPressed(BUTTON_B))
            scr.scoreMenuIsActive = 0
            //break
        
        waitForNextFrame() // The game dies of heart failure if you don't include this
    }

    scr.scoreMenuIsActive = 0
    //global.game_mode = 0x4c
}

function void DrawText(u8 i, string currentchar)
{
	//better then spaghetti
	constant array <u64> ForcedZoneNames = 
	{
		"Angel Island", "Hydrocity", "Marble Garden", "Carnival Night", "Ice Cap", "Launch Base",
		"Mushroom Hill", "Flying Battery", "Sandopolis", "Lava Reef", "Sky Sanctuary", "Death Egg"
	}
	constant array <u64> ForcedNamesShort = 
	{
		"AIZ", "HCZ", "MGZ", "CNZ", "ICZ", "LBZ", "MHZ", "FBZ", "SOZ", "LRZ", "SSZ", "DEZ"
	}
	
	u16 var = (i < 5) ? 10 : ((i < 10) ? 130 : 210)
	u8 varI = (i < 5) ? i : (i < 10 ? (i - 5) : (i - 10))
	
	//debugLog(stringformat("v : %d, i :%d", var, varI))
	//debugLog(stringformat("%s1", ForcedNamesShort[i]))
	
	string anothervar = stringformat("%s1", ForcedNamesShort[i])
	string anothervar1 = stringformat("%s2", ForcedNamesShort[i])
	
	Renderer.drawText("oxyfont_small", var, 25 + 40 * varI, ForcedZoneNames[i], 0x0f0f0fff, 1, 0, 0xe000, 0)
	Renderer.drawText("oxyfont_tiny", var, 35 + 40 * varI, stringformat("Act 1: %d %s %s", scr.getHighScoreString(anothervar, currentchar), scr.rankToLetter(scr.getBestRankString(anothervar, currentchar)), scr.isPLetter(anothervar, currentchar)), 0x0f0f0fff, 1, 0, 0xe000, 0)
	Renderer.drawText("oxyfont_tiny", var, 45 + 40 * varI, stringformat("Act 2: %d %s %s", scr.getHighScoreString(anothervar1, currentchar), scr.rankToLetter(scr.getBestRankString(anothervar1, currentchar)), scr.isPLetter(anothervar1, currentchar)), 0x0f0f0fff, 1, 0, 0xe000, 0)

}


function string scr.isPLetter(string act, u8 char) // Used to spit out the P rank boolean
{
    if scr.hasPRankString(act, char) == true
        return "P"
    else
        return " " // blank space for people who aren't P at the game
}

// Tempo was here. Someone should probably introduce him to ToeJam and Earl; they'd probably all get along just fine.

function void DataSelect.drawCustomPlanes()
{
	// Draw our own widescreen version of the background
	// TODO: The actual background still gets rendered, though it's not visible at all
	//  -> Maybe the plane W is used here?
	Renderer.drawCustomSprite("background-a", getScreenExtend() - 40, 0, 0x00, 0, 0x2000)

	// Custom rendering of plane B (which is not the background here) to ignore the wrapping
	s16 px = s16(camera.foreground.x.u16)
	if (px < 0)
	{
		Renderer.enableDefaultPlane(2, false)
		Renderer.setupPlane(-px, 0, getScreenWidth() + px, getScreenHeight(), 0x10, 0, 0x3000)
	}
	else if (px > 0x400 - getScreenWidth())
	{
		Renderer.enableDefaultPlane(2, false)
		Renderer.setupPlane(0, 0, 0x400 - px, getScreenHeight(), 0x10, 0, 0x3000)
	}
}


function u64 scr.getDataSelectBackground()
{
    return "bg_dataselect"
}
